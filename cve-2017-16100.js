//################# DNS-SYNC #################
//https://nvd.nist.gov/vuln/detail/CVE-2017-16100
//Type : Exponential
//Fix : Non-backtracking regex engine

import express from 'express';
import dnsSync from 'dns-sync';
import exec from 'child_process';
import functionTimeout from 'function-timeout';

const router = express.Router();

function executeNslookup(hostname) {
    return new Promise((resolve, reject) => {
        exec(`nslookup ${hostname}`, (error, stdout, stderr) => {
            if (error) {
                console.error('nslookup error:', stderr);
                reject(error);
            } else {
                const match = stdout.match(/Address: (\S+)/);
                if (match && match[1]) {
                    resolve(match[1]);
                } else {
                    reject(new Error('IP address not found'));
                }
            }
        });
    });
}

router.get('/lookup', (req, res) => {
    const hostname = req.query.hostname;
    const ip = dnsSync.resolve(hostname);
    if (ip) {
        res.send(`Resolved`);
    } else {
        res.status(404).send(`Could not resolve hostname.`);
    }
});

router.post('/index',(req, res) => {
    const input = req.body.input;

    const result = dnsSync.resolve(input);
  
    if (result) {
        res.send('CVE-2017-16100: Regex matched successfully');
    } else {
        res.status(400).send('CVE-2017-16100: Regex did not match');
    }
});

router.post('/diff_regex_engine',(req, res) => {
    const input = req.body.input;
    const result = dnsSync.resolve(input,1);  
    if (result) {
        res.send('CVE-2017-16100: Regex matched successfully');
    } else {
        res.status(400).send('CVE-2017-16100: Regex did not match');
    }
});

router.post('/alternate_logic',(req, res) => {
    const input = req.body.input;

    if (executeNslookup(input)) {
        res.send('CVE-2017-16100: Regex matched successfully');
    } else {
        res.status(400).send('CVE-2017-16100: Regex did not match');
    }
});

router.post('/repair', (req, res) => {
    const input = req.body.input;
    const regex = /^(?:(?:(((?:[ d]|[ghtw](?:(?:[ .eglw])*)[cdhmopu]))[ilow]))*)((?:[^ b-eghtw]|[bc](?:(?:[ .cdinp])*)[^ .cdimnp]))$/; 
    if (regex.test(input)) {
        res.send('CVE-2017-16100: Regex matched successfully');
    } else {
        res.status(400).send('CVE-2017-16100: Regex did not match');
    }
});

function regexMatch(input) {
    const result = dnsSync.resolve(input);
    return result;
}

const regexMatchWithTimeout = functionTimeout(regexMatch, {timeout:1000}); 

router.post('/timeout', (req, res) => {
    const input = req.body.input;
    try {
        const result = regexMatchWithTimeout(input);
        console.log('Result:', result);
        res.send({ result });
    } catch (error) {
        console.error('Error:', error.message);
        res.status(500).send({ error: 'Regex operation timed out or failed' });
    }
});

export default router;