//############## HTML Parse Stringify ##############//
// https://nvd.nist.gov/vuln/detail/CVE-2021-23346
// Type : Exponential
// Fix : Repair the regex
// Attack String : `<!"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''"""''""`

import express from 'express';
import functionTimeout from 'function-timeout';
import HTML from 'html-parse-stringify';
import RE2 from 're2';
import jsdom from 'jsdom'; 
const router_cve_2021_23346 = express.Router();

// ######################################## Functional 
router_cve_2021_23346.post('/index', (req, res) => {
  const input = req.body.input;
  // var input 
  var result = HTML.parse(input);
  if (result) {
    res.send(result);
  } else {
    res.status(400).send("Regex did not match");
  }
});

// ######################################## Functional 
router_cve_2021_23346.post('/diff_regex_engine', (req, res) => {
  const input = req.body.input;
  var regex = new RE2(/<[a-zA-Z\-\!\/](?:"[^"]*"['"]*|'[^']*'['"]*|[^'">])*>/g);
  var result = regex.match(input);
  if (result) {
    res.status(200).send("Regex matched successfully");
  } else {
    res.status(400).send("Regex did not match");
  }
});

const { JSDOM } = jsdom;
// ######################################## Functional 
router_cve_2021_23346.post('/alternate_logic', (req, res) => {
  const input = req.body.input;
const dom = new JSDOM(input);
const document = dom.window.document;
const titleElement = document.querySelector("title");

if (titleElement) {
    const title = titleElement.textContent;
    res.send(title); // XSS vulnerable
} else {
    res.status(400).send('No <title> element found in the input HTML');
}
})

function regexMatch(input) {
  var result = HTML.parse(input);
  return result;
}

const regexMatchWithTimeout = functionTimeout(regexMatch, {timeout:1000}); 

// ######################################## Functional 
router_cve_2021_23346.post('/timeout', (req, res) => {
  const input = req.body.input;
  try {
      const result = regexMatchWithTimeout(input);
      console.log('Result:', result);
      res.send({ result });
  } catch (error) {
      console.error('Error:', error.message);
      res.status(500).send({ error: 'Regex operation timed out or failed' });
  }
});

// ######################################## Functional 
router_cve_2021_23346.post('/repair', (req, res) => {
  // Generated a vulnerable regular expression. Payload : let repeatedString = '<a !'.repeat(27387);
  const regex = /<[a-zA-Z\-!\/](?:(?:(?:(?:[ hn](?:(?:[^"])*)"(?:(?:[^ \/>hnr]["lmx])*)|(?:(?:(?!\.).)(?:(?:[^'])*)'(?:(?:[^ \/>aehnpr])*)|[\/r]))))*)>/g;
  const input = req.body.input;
  if(regex.test(input)) {
    res.send("Regex matched successfully");
  }
  else {
    res.status(400).send("Regex did not match");
  }
});
export default router_cve_2021_23346;